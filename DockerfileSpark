# inspiration: https://dev.to/rogertorres/first-steps-with-docker-rust-30oi

FROM rust:1.66.1-buster as build

# create an empty shell project
RUN USER=root cargo new --bin blind-eternities
WORKDIR /blind-eternities

# copy manifests
COPY ./Cargo.lock ./Cargo.lock
COPY ./Cargo.toml ./Cargo.toml
RUN rm -r ./src && \
    cargo new --quiet --bin server && \
    cargo new --quiet --lib common && \
    cargo new --quiet --lib spark-protocol && \
    cargo new --bin spark

# cache dependencies
COPY ./spark/Cargo.toml ./spark/Cargo.toml
COPY ./common/Cargo.toml ./common/Cargo.toml
COPY ./spark-protocol/Cargo.toml ./spark-protocol/Cargo.toml

COPY ./common/src ./common/src
COPY ./spark-protocol/src ./spark-protocol/src

RUN cargo build --release --bin spark
RUN rm -r ./spark/src

# copy real source
COPY ./spark/src ./spark/src

# build for release
RUN rm ./target/release/spark*
RUN find ./spark/src/ -exec touch '{}' ';'
RUN cargo build --release --bin spark

# executing image
FROM debian:buster

COPY --from=build /blind-eternities/target/release/spark .

ENV SPARK__CONFIG_FILE /config.toml
ENV RUST_LOG=debug
CMD ["./spark", "daemon"]
